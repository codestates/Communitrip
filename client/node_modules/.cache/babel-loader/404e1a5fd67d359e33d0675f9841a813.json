{"ast":null,"code":"var _jsxFileName = \"/Users/jangtaeseong/Desktop/second-project/Communitrip/client/src/components/Kakao_Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nconst MapContainer = _ref => {\n  _s();\n\n  let {\n    searchPlace\n  } = _ref;\n  useEffect(() => {\n    const container = document.getElementById(\"myMap\");\n    const options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n    const ps = new kakao.maps.services.Places();\n    ps.keywordSearch(searchPlace, placesSearchCB);\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        let bounds = new kakao.maps.LatLngBounds();\n\n        for (let i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n\n        map.setBounds(bounds);\n      }\n    }\n\n    function displayMarker(place) {\n      // 마커를 생성하고 지도에 표시\n      let marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x)\n      }); // 마커에 클릭이벤트를 등록\n\n      kakao.maps.event.addListener(marker, 'click', function () {\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출\n        infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\n        infowindow.open(map, marker);\n      });\n    }\n  }, [searchPlace]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"myMap\",\n    style: {\n      width: '300px',\n      height: '300px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useEffect","kakao","window","MapContainer","searchPlace","container","document","getElementById","options","center","maps","LatLng","level","map","Map","ps","services","Places","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","bounds","LatLngBounds","i","length","displayMarker","extend","y","x","setBounds","place","marker","Marker","position","event","addListener","infowindow","setContent","place_name","open","width","height"],"sources":["/Users/jangtaeseong/Desktop/second-project/Communitrip/client/src/components/Kakao_Map.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst { kakao } = window;\n\nconst MapContainer = ({ searchPlace }) => {\n  useEffect(() => {\n    const container = document.getElementById(\"myMap\");\n    const options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3,\n    };\n    const map = new kakao.maps.Map(container, options);\n\n    const ps = new kakao.maps.services.Places();\n\n    ps.keywordSearch(searchPlace, placesSearchCB);\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        let bounds = new kakao.maps.LatLngBounds();\n\n        for (let i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n\n        map.setBounds(bounds);\n      }\n    }\n\n    function displayMarker(place) {\n    \n      // 마커를 생성하고 지도에 표시\n      let marker = new kakao.maps.Marker({\n          map: map,\n          position: new kakao.maps.LatLng(place.y, place.x) \n      });\n  \n      // 마커에 클릭이벤트를 등록\n      kakao.maps.event.addListener(marker, 'click', function() {\n          // 마커를 클릭하면 장소명이 인포윈도우에 표출\n          infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\n          infowindow.open(map, marker);\n      });\n    }\n  }, [searchPlace]);\n\n    return (\n        <div id='myMap' style={{\n            width: '300px', \n            height: '300px'\n        }}></div>\n    );\n}\n\nexport default MapContainer; "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAM;EAAEC;AAAF,IAAYC,MAAlB;;AAEA,MAAMC,YAAY,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAAEC;EAAF,CAAoB;EACxCJ,SAAS,CAAC,MAAM;IACd,MAAMK,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAlB;IACA,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,IAAIR,KAAK,CAACS,IAAN,CAAWC,MAAf,CAAsB,SAAtB,EAAiC,UAAjC,CADM;MAEdC,KAAK,EAAE;IAFO,CAAhB;IAIA,MAAMC,GAAG,GAAG,IAAIZ,KAAK,CAACS,IAAN,CAAWI,GAAf,CAAmBT,SAAnB,EAA8BG,OAA9B,CAAZ;IAEA,MAAMO,EAAE,GAAG,IAAId,KAAK,CAACS,IAAN,CAAWM,QAAX,CAAoBC,MAAxB,EAAX;IAEAF,EAAE,CAACG,aAAH,CAAiBd,WAAjB,EAA8Be,cAA9B;;IAEA,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,UAAtC,EAAkD;MAChD,IAAID,MAAM,KAAKpB,KAAK,CAACS,IAAN,CAAWM,QAAX,CAAoBO,MAApB,CAA2BC,EAA1C,EAA8C;QAC5C,IAAIC,MAAM,GAAG,IAAIxB,KAAK,CAACS,IAAN,CAAWgB,YAAf,EAAb;;QAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACQ,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;UACpCE,aAAa,CAACT,IAAI,CAACO,CAAD,CAAL,CAAb;UACAF,MAAM,CAACK,MAAP,CAAc,IAAI7B,KAAK,CAACS,IAAN,CAAWC,MAAf,CAAsBS,IAAI,CAACO,CAAD,CAAJ,CAAQI,CAA9B,EAAiCX,IAAI,CAACO,CAAD,CAAJ,CAAQK,CAAzC,CAAd;QACD;;QAEDnB,GAAG,CAACoB,SAAJ,CAAcR,MAAd;MACD;IACF;;IAED,SAASI,aAAT,CAAuBK,KAAvB,EAA8B;MAE5B;MACA,IAAIC,MAAM,GAAG,IAAIlC,KAAK,CAACS,IAAN,CAAW0B,MAAf,CAAsB;QAC/BvB,GAAG,EAAEA,GAD0B;QAE/BwB,QAAQ,EAAE,IAAIpC,KAAK,CAACS,IAAN,CAAWC,MAAf,CAAsBuB,KAAK,CAACH,CAA5B,EAA+BG,KAAK,CAACF,CAArC;MAFqB,CAAtB,CAAb,CAH4B,CAQ5B;;MACA/B,KAAK,CAACS,IAAN,CAAW4B,KAAX,CAAiBC,WAAjB,CAA6BJ,MAA7B,EAAqC,OAArC,EAA8C,YAAW;QACrD;QACAK,UAAU,CAACC,UAAX,CAAsB,8CAA8CP,KAAK,CAACQ,UAApD,GAAiE,QAAvF;QACAF,UAAU,CAACG,IAAX,CAAgB9B,GAAhB,EAAqBsB,MAArB;MACH,CAJD;IAKD;EACF,CAxCQ,EAwCN,CAAC/B,WAAD,CAxCM,CAAT;EA0CE,oBACI;IAAK,EAAE,EAAC,OAAR;IAAgB,KAAK,EAAE;MACnBwC,KAAK,EAAE,OADY;MAEnBC,MAAM,EAAE;IAFW;EAAvB;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAjDD;;GAAM1C,Y;;KAAAA,Y;AAmDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}