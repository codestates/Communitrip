{"ast":null,"code":"var _jsxFileName = \"/Users/jangtaeseong/Desktop/second-project/Communitrip/client/src/components/kakaoMap.js\",\n    _s = $RefreshSig$();\n\n/* global kakao */\nimport React, { useEffect } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapPick = _ref => {\n  _s();\n\n  let {\n    meeting_place\n  } = _ref;\n  const {\n    lat,\n    lon\n  } = useSelector(state => state.locationReducer, shallowEqual);\n  const {\n    kakao\n  } = window;\n  useEffect(() => {\n    const container = document.querySelector('.kakao-map');\n    const options = {\n      center: new kakao.maps.LatLng(lat, lon),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n    var geocoder = new kakao.maps.services.Geocoder();\n    geocoder.addressSearch(meeting_place, function (result, status) {\n      // 정상적으로 검색이 완료됐으면 \n      if (status === kakao.maps.services.Status.OK) {\n        var coords = new kakao.maps.LatLng(result[0].y, result[0].x); // 결과값으로 받은 위치를 마커로 표시합니다\n\n        var marker = new kakao.maps.Marker({\n          map: map,\n          position: coords\n        }); // 인포윈도우로 장소에 대한 설명을 표시합니다\n\n        var infowindow = new kakao.maps.InfoWindow({\n          content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">' + meeting_place + '</div>'\n        });\n        infowindow.open(map, marker); // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n\n        map.setCenter(coords);\n      }\n    }); //위도, 경도로 변환 및 마커표시\n    // let markerPosition  = new kakao.maps.LatLng(lat, lon); \n    // let marker = new kakao.maps.Marker({\n    //     position: markerPosition\n    // });\n    // marker.setMap(map);\n  }, [meeting_place]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kakao-map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapPick, \"+6Tg3hJ7cYdpyz7Mn795PWGsta0=\", false, function () {\n  return [useSelector];\n});\n\n_c = MapPick;\nexport default MapPick;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPick\");","map":{"version":3,"names":["React","useEffect","useSelector","shallowEqual","MapPick","meeting_place","lat","lon","state","locationReducer","kakao","window","container","document","querySelector","options","center","maps","LatLng","level","map","Map","geocoder","services","Geocoder","addressSearch","result","status","Status","OK","coords","y","x","marker","Marker","position","infowindow","InfoWindow","content","open","setCenter"],"sources":["/Users/jangtaeseong/Desktop/second-project/Communitrip/client/src/components/kakaoMap.js"],"sourcesContent":["/* global kakao */\nimport React, { useEffect } from 'react';\nimport { useSelector,shallowEqual } from 'react-redux';\n\n\nconst MapPick = ({meeting_place}) => {\n    const {lat,lon} = useSelector((state=>state.locationReducer),shallowEqual)\n    const { kakao } = window;\n  \n    \n    useEffect(() => {\n        const container = document.querySelector('.kakao-map');\n        const options = {\n            center: new kakao.maps.LatLng(lat, lon),\n            level: 3\n        };\n        const map = new kakao.maps.Map(container, options);\n        var geocoder = new kakao.maps.services.Geocoder();\n        geocoder.addressSearch(meeting_place, function(result, status) {\n\n            // 정상적으로 검색이 완료됐으면 \n            if (status === kakao.maps.services.Status.OK) {\n        \n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n        \n                // 결과값으로 받은 위치를 마커로 표시합니다\n                var marker = new kakao.maps.Marker({\n                    map: map,\n                    position: coords\n                });\n        \n                // 인포윈도우로 장소에 대한 설명을 표시합니다\n                var infowindow = new kakao.maps.InfoWindow({\n                    content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">'+meeting_place+'</div>'\n                });\n                infowindow.open(map, marker);\n        \n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n                map.setCenter(coords);\n            } \n        });    \n        //위도, 경도로 변환 및 마커표시\n        // let markerPosition  = new kakao.maps.LatLng(lat, lon); \n        // let marker = new kakao.maps.Marker({\n        //     position: markerPosition\n        // });\n        // marker.setMap(map);\n\n    }, [meeting_place]);\n    return (\n        <div className='kakao-map'></div>\n    );\n}\n\nexport default MapPick;"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAqBC,YAArB,QAAyC,aAAzC;;;AAGA,MAAMC,OAAO,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAACC;EAAD,CAAoB;EACjC,MAAM;IAACC,GAAD;IAAKC;EAAL,IAAYL,WAAW,CAAEM,KAAK,IAAEA,KAAK,CAACC,eAAf,EAAgCN,YAAhC,CAA7B;EACA,MAAM;IAAEO;EAAF,IAAYC,MAAlB;EAGAV,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAlB;IACA,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,IAAIN,KAAK,CAACO,IAAN,CAAWC,MAAf,CAAsBZ,GAAtB,EAA2BC,GAA3B,CADI;MAEZY,KAAK,EAAE;IAFK,CAAhB;IAIA,MAAMC,GAAG,GAAG,IAAIV,KAAK,CAACO,IAAN,CAAWI,GAAf,CAAmBT,SAAnB,EAA8BG,OAA9B,CAAZ;IACA,IAAIO,QAAQ,GAAG,IAAIZ,KAAK,CAACO,IAAN,CAAWM,QAAX,CAAoBC,QAAxB,EAAf;IACAF,QAAQ,CAACG,aAAT,CAAuBpB,aAAvB,EAAsC,UAASqB,MAAT,EAAiBC,MAAjB,EAAyB;MAE3D;MACA,IAAIA,MAAM,KAAKjB,KAAK,CAACO,IAAN,CAAWM,QAAX,CAAoBK,MAApB,CAA2BC,EAA1C,EAA8C;QAE1C,IAAIC,MAAM,GAAG,IAAIpB,KAAK,CAACO,IAAN,CAAWC,MAAf,CAAsBQ,MAAM,CAAC,CAAD,CAAN,CAAUK,CAAhC,EAAmCL,MAAM,CAAC,CAAD,CAAN,CAAUM,CAA7C,CAAb,CAF0C,CAI1C;;QACA,IAAIC,MAAM,GAAG,IAAIvB,KAAK,CAACO,IAAN,CAAWiB,MAAf,CAAsB;UAC/Bd,GAAG,EAAEA,GAD0B;UAE/Be,QAAQ,EAAEL;QAFqB,CAAtB,CAAb,CAL0C,CAU1C;;QACA,IAAIM,UAAU,GAAG,IAAI1B,KAAK,CAACO,IAAN,CAAWoB,UAAf,CAA0B;UACvCC,OAAO,EAAE,+DAA6DjC,aAA7D,GAA2E;QAD7C,CAA1B,CAAjB;QAGA+B,UAAU,CAACG,IAAX,CAAgBnB,GAAhB,EAAqBa,MAArB,EAd0C,CAgB1C;;QACAb,GAAG,CAACoB,SAAJ,CAAcV,MAAd;MACH;IACJ,CAtBD,EARY,CA+BZ;IACA;IACA;IACA;IACA;IACA;EAEH,CAtCQ,EAsCN,CAACzB,aAAD,CAtCM,CAAT;EAuCA,oBACI;IAAK,SAAS,EAAC;EAAf;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CA/CD;;GAAMD,O;UACgBF,W;;;KADhBE,O;AAiDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}