{"ast":null,"code":"var _jsxFileName = \"/Users/jangtaeseong/Desktop/second-project/Communitrip/client/src/components/test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Map } from \"react-kakao-maps-sdk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nexport default function TestMap() {\n  _s();\n\n  const [state, setState] = useState({\n    // 지도의 초기 위치\n    center: {\n      lat: 37.49676871972202,\n      lng: 127.02474726969814\n    },\n    // 지도 위치 변경시 panto를 이용할지(부드럽게 이동)\n    isPanto: true\n  });\n  const [searchAddress, SetSearchAddress] = useState(); // 주소 입력후 검색 클릭 시 원하는 주소로 이동\n\n  const SearchMap = () => {\n    const geocoder = new kakao.maps.services.Geocoder();\n\n    let callback = function (result, status) {\n      if (status === kakao.maps.services.Status.OK) {\n        const newSearch = result[0];\n        setState({\n          center: {\n            lat: newSearch.y,\n            lng: newSearch.x\n          }\n        });\n      }\n    };\n\n    geocoder.addressSearch(`${searchAddress}`, callback);\n  };\n\n  const handleSearchAddress = e => {\n    SetSearchAddress(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n    , {\n      center: state.center,\n      isPanto: state.isPanto,\n      style: {\n        // 지도의 크기\n        width: \"100%\",\n        height: \"450px\"\n      },\n      level: 3 // 지도의 확대 레벨\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSearchAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: SearchMap,\n        children: \"\\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TestMap, \"W0nuoKZ60TXrLbQug9NdtzG9Srk=\");\n\n_c = TestMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestMap\");","map":{"version":3,"names":["React","useState","Map","kakao","window","TestMap","state","setState","center","lat","lng","isPanto","searchAddress","SetSearchAddress","SearchMap","geocoder","maps","services","Geocoder","callback","result","status","Status","OK","newSearch","y","x","addressSearch","handleSearchAddress","e","target","value","width","height"],"sources":["/Users/jangtaeseong/Desktop/second-project/Communitrip/client/src/components/test.js"],"sourcesContent":["import React,{useState} from 'react';\nimport { Map } from \"react-kakao-maps-sdk\";\n\nconst { kakao } = window;\n\nexport default function TestMap() {\n\n  const [state, setState] = useState({\n    // 지도의 초기 위치\n    center: { lat: 37.49676871972202, lng: 127.02474726969814 },\n    // 지도 위치 변경시 panto를 이용할지(부드럽게 이동)\n    isPanto: true,\n  });\n  const [searchAddress, SetSearchAddress] = useState();\n  \n  // 주소 입력후 검색 클릭 시 원하는 주소로 이동\n  const SearchMap = () => {\n    const geocoder = new kakao.maps.services.Geocoder();\n    \n    let callback = function(result, status) {\n      if (status === kakao.maps.services.Status.OK) {\n        const newSearch = result[0]\n        setState({\n          center: { lat: newSearch.y, lng: newSearch.x }\n        })\n      }\n    };\n      geocoder.addressSearch(`${searchAddress}`, callback);\n    }\n  \n  const handleSearchAddress = (e) => {\n    SetSearchAddress(e.target.value)\n  }\n  \n  return (\n  <div>\n  <Map // 지도를 표시할 Container\n    center={state.center}\n    isPanto={state.isPanto}\n    style={{\n         // 지도의 크기\n        width: \"100%\",\n        height: \"450px\",\n        }}\n        level={3} // 지도의 확대 레벨\n  >\n  </Map>\n  \n  <div>\n    <input onChange={handleSearchAddress}></input>\n    <button onClick={SearchMap}>클릭</button>\n  </div>\n  </div>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,GAAT,QAAoB,sBAApB;;AAEA,MAAM;EAAEC;AAAF,IAAYC,MAAlB;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAEhC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;IACjC;IACAO,MAAM,EAAE;MAAEC,GAAG,EAAE,iBAAP;MAA0BC,GAAG,EAAE;IAA/B,CAFyB;IAGjC;IACAC,OAAO,EAAE;EAJwB,CAAD,CAAlC;EAMA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,EAAlD,CARgC,CAUhC;;EACA,MAAMa,SAAS,GAAG,MAAM;IACtB,MAAMC,QAAQ,GAAG,IAAIZ,KAAK,CAACa,IAAN,CAAWC,QAAX,CAAoBC,QAAxB,EAAjB;;IAEA,IAAIC,QAAQ,GAAG,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;MACtC,IAAIA,MAAM,KAAKlB,KAAK,CAACa,IAAN,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,EAA1C,EAA8C;QAC5C,MAAMC,SAAS,GAAGJ,MAAM,CAAC,CAAD,CAAxB;QACAb,QAAQ,CAAC;UACPC,MAAM,EAAE;YAAEC,GAAG,EAAEe,SAAS,CAACC,CAAjB;YAAoBf,GAAG,EAAEc,SAAS,CAACE;UAAnC;QADD,CAAD,CAAR;MAGD;IACF,CAPD;;IAQEX,QAAQ,CAACY,aAAT,CAAwB,GAAEf,aAAc,EAAxC,EAA2CO,QAA3C;EACD,CAZH;;EAcA,MAAMS,mBAAmB,GAAIC,CAAD,IAAO;IACjChB,gBAAgB,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;EACD,CAFD;;EAIA,oBACA;IAAA,wBACA,QAAC,GAAD,CAAK;IAAL;MACE,MAAM,EAAEzB,KAAK,CAACE,MADhB;MAEE,OAAO,EAAEF,KAAK,CAACK,OAFjB;MAGE,KAAK,EAAE;QACF;QACDqB,KAAK,EAAE,MAFJ;QAGHC,MAAM,EAAE;MAHL,CAHT;MAQM,KAAK,EAAE,CARb,CAQgB;;IARhB;MAAA;MAAA;MAAA;IAAA,QADA,eAaA;MAAA,wBACE;QAAO,QAAQ,EAAEL;MAAjB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEd,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAbA;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAoBD;;GAjDuBT,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}