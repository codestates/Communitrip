{"ast":null,"code":"var _jsxFileName = \"/home/sangmun/finalproject/Communitrip/client/src/pages/KakaoLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\n\nfunction KakaoLogin() {\n  _s();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const REST_API_KEY = \"e79be0723c7ef0857a93b051eadd61dd\";\n  const REDIRECT_URI = \"http://localhost:3000/auth/callback/kakao\";\n  const KAKAO_CODE = location.search.split('=')[1];\n  console.log(KAKAO_CODE); //const Client_secret=\"rMoNWCVkTaExvzOK3SWNUrM9oOSRHld1\"\n\n  const getKakaoToken = () => {\n    axios.post(`https://kauth.kakao.com/oauth/token?\n        grant_type=authorization_code\n        &client_id=${REST_API_KEY}\n        &redirect_uri=http://localhost:3000/auth/callback/kakao\n        &code=${KAKAO_CODE}`, {\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n      }\n    }).then(res => {\n      console.log(res); // res에 포함된 토큰 받아서 원하는 로직을 하면된다.\n    });\n  };\n\n  useEffect(() => {\n    if (!location.search) return;\n    getKakaoToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"KakaoLogin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n}\n\n_s(KakaoLogin, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = KakaoLogin;\nexport default KakaoLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoLogin\");","map":{"version":3,"names":["React","useEffect","axios","useNavigate","useLocation","defaults","withCredentials","KakaoLogin","location","navigate","REST_API_KEY","REDIRECT_URI","KAKAO_CODE","search","split","console","log","getKakaoToken","post","headers","then","res"],"sources":["/home/sangmun/finalproject/Communitrip/client/src/pages/KakaoLogin.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom'\naxios.defaults.withCredentials = true;\n\nfunction KakaoLogin() {\n    const location = useLocation();\n    const navigate =useNavigate();\n    const REST_API_KEY=\"e79be0723c7ef0857a93b051eadd61dd\";\n    const REDIRECT_URI=\"http://localhost:3000/auth/callback/kakao\";\n    const KAKAO_CODE = location.search.split('=')[1];\n    console.log(KAKAO_CODE);\n    //const Client_secret=\"rMoNWCVkTaExvzOK3SWNUrM9oOSRHld1\"\n    const getKakaoToken =() =>{\n        axios.post(`https://kauth.kakao.com/oauth/token?\n        grant_type=authorization_code\n        &client_id=${REST_API_KEY}\n        &redirect_uri=http://localhost:3000/auth/callback/kakao\n        &code=${KAKAO_CODE}`\n        , {\n    headers: {\n        'Content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n    }\n  }).then((res) => {\n      console.log(res)\n      // res에 포함된 토큰 받아서 원하는 로직을 하면된다.\n  })\n    }\n    useEffect(()=>{\n        if(!location.search) return;\n        getKakaoToken();\n    },[])\n    return <div>KakaoLogin</div>\n}\nexport default KakaoLogin;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;;AACAF,KAAK,CAACG,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EAClB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAMK,QAAQ,GAAEN,WAAW,EAA3B;EACA,MAAMO,YAAY,GAAC,kCAAnB;EACA,MAAMC,YAAY,GAAC,2CAAnB;EACA,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAnB;EACAC,OAAO,CAACC,GAAR,CAAYJ,UAAZ,EANkB,CAOlB;;EACA,MAAMK,aAAa,GAAE,MAAK;IACtBf,KAAK,CAACgB,IAAN,CAAY;AACpB;AACA,qBAAqBR,YAAa;AAClC;AACA,gBAAgBE,UAAW,EAJnB,EAKE;MACNO,OAAO,EAAE;QACL,gBAAgB;MADX;IADH,CALF,EASHC,IATG,CASGC,GAAD,IAAS;MACbN,OAAO,CAACC,GAAR,CAAYK,GAAZ,EADa,CAEb;IACH,CAZK;EAaH,CAdD;;EAeApB,SAAS,CAAC,MAAI;IACV,IAAG,CAACO,QAAQ,CAACK,MAAb,EAAqB;IACrBI,aAAa;EAChB,CAHQ,EAGP,EAHO,CAAT;EAIA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH;;GA5BQV,U;UACYH,W,EACDD,W;;;KAFXI,U;AA6BT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}